version: '3.8'

services:
  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./temp:/app/temp:rw
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - redis
    restart: unless-stopped

  # Redis Service
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Language Execution Containers
  python:
    build:
      context: ./docker/python
      dockerfile: Dockerfile
    image: execution-system-python:latest
    volumes:
      - ./temp:/tmp:rw
    restart: unless-stopped
    command: sleep infinity

  javascript:
    build:
      context: ./docker/javascript
      dockerfile: Dockerfile
    image: execution-system-javascript:latest
    volumes:
      - ./temp:/tmp:rw
    restart: unless-stopped
    command: sleep infinity

  java:
    build:
      context: ./docker/java
      dockerfile: Dockerfile
    image: execution-system-java:latest
    volumes:
      - ./temp:/tmp:rw
    restart: unless-stopped
    command: sleep infinity

  cpp:
    build:
      context: ./docker/cpp
      dockerfile: Dockerfile
    image: execution-system-cpp:latest
    volumes:
      - ./temp:/tmp:rw
    restart: unless-stopped
    command: sleep infinity

  c:
    build:
      context: ./docker/c
      dockerfile: Dockerfile
    image: execution-system-c:latest
    volumes:
      - ./temp:/tmp:rw
    restart: unless-stopped
    command: sleep infinity

volumes:
  temp:
    driver: local
  redis_data:
    driver: local 