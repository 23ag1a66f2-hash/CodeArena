---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: codearena-execution
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: fast-ssd # Adjust based on your cluster

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: codearena-execution
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: database
    app.kubernetes.io/version: "7.0"
spec:
  replicas: 1
  strategy:
    type: Recreate # Single instance for simplicity
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/component: database
        app.kubernetes.io/version: "7.0"
    spec:
      containers:
      - name: redis
        image: redis:7.0-alpine
        ports:
        - containerPort: 6379
          name: redis
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: execution-secrets
              key: REDIS_PASSWORD
              optional: true
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --save
        - "60 1000"
        # Uncomment below if using password authentication
        # - --requirepass
        # - $(REDIS_PASSWORD)
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsNonRoot: true

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: codearena-execution
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: redis
    protocol: TCP
    name: redis
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: database 