# üê≥ CodeArena Execution Worker Dockerfile
# This container connects to Docker daemon to spawn execution containers

# Use Node.js Alpine base image
FROM node:18-alpine

# Install system dependencies
RUN apk add --no-cache \
    docker-cli \
    curl \
    bash \
    tini

# Create app directory
WORKDIR /app

# Copy package files
COPY queue/package*.json ./

# Install dependencies
RUN npm install --production --no-audit --no-fund && npm cache clean --force

# Copy source code
COPY queue/src ./src

# Create non-root user
RUN addgroup -g 998 -S docker && \
    addgroup -g 1001 -S worker && \
    adduser -S worker -u 1001 -G worker && \
    adduser worker docker

# Create temp directory with proper permissions
RUN mkdir -p /tmp && chown -R worker:worker /tmp

# Set ownership
RUN chown -R worker:worker /app

# Switch to non-root user
USER worker

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3002/health || exit 1

# Expose metrics port
EXPOSE 3002

# Use tini as init system
ENTRYPOINT ["/sbin/tini", "--"]

# Start the worker
CMD ["node", "src/worker.js"] 